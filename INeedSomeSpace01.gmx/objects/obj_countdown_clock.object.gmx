<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set the starting time
seconds     = 0;            // set the starting seconds
minutes     = 2;            // set the starting minutes
//hours       = 0;            // set the starting hours
alarm[0]    = room_speed * 4;   // set alarm for one second (room_speed)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Timer

seconds -= 1;
if(seconds &lt; 0){        // check if seconds is less than 0
    seconds = 59;       // reset seconds
    minutes -= 1;       // take one off minutes
}
if(minutes &lt; 0){        // check if minutes are less than 0
    minutes = 59;       // reset minutes
    //hours -= 1;         // take one off hours
}

if(minutes &lt;= 0){
    if(seconds == 3 || seconds == 2 || seconds == 1){
        audio_play_sound(snd_timer_1sec_1,1,false);
    }else {
        audio_stop_sound(snd_timer_1sec_1);
    }
}

if(seconds == 0 &amp;&amp; minutes == 0 /*&amp;&amp; hours == 0*/){ // check if countdown has reached 00:00:00
    // Do Something
    // Check for winner
    // Player 1 wins
    if((obj_control.scr_1 &gt; obj_control.scr_2) &amp;&amp; (obj_control.scr_1 &gt; obj_control.scr_3)
        &amp;&amp; (obj_control.scr_1 &gt; obj_control.scr_4)){
        obj_control.P1_wins = true;
    }
    // Player 2 wins
    if((obj_control.scr_2 &gt; obj_control.scr_1) &amp;&amp; (obj_control.scr_2 &gt; obj_control.scr_3)
        &amp;&amp; (obj_control.scr_2 &gt; obj_control.scr_4)){
        obj_control.P2_wins = true;
    }
    
    if((obj_control.scr_3 &gt; obj_control.scr_2) &amp;&amp; (obj_control.scr_3 &gt; obj_control.scr_1)
        &amp;&amp; (obj_control.scr_3 &gt; obj_control.scr_4)){
        obj_control.P3_wins = true;
    }
    // Player 2 wins
    if((obj_control.scr_4 &gt; obj_control.scr_2) &amp;&amp; (obj_control.scr_4 &gt; obj_control.scr_3)
        &amp;&amp; (obj_control.scr_4 &gt; obj_control.scr_1)){
        obj_control.P4_wins = true;
    }else {
        obj_control.draw = true;
    }
    
    obj_control.round_end = true;
    
}else {
    alarm[0] = room_speed;  // reset alarm
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//show_hours = string_repeat("0", 2 - string_length(string(hours))) + string(minutes);      // If single digit add a leading 0
show_minutes = string_repeat("0", 2 - string_length(string(minutes))) + string(minutes);    // If single digit add a leading 0
show_seconds = string_repeat("0", 2 - string_length(string(seconds))) + string(seconds);    // If single digit add a leading 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
